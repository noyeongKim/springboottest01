- 테스트 결과

seq01
> - @Bean에서 메소드를 지정할 수 있다.<br>
> - 스프링 빈이 스프링 코드에 의존하지 않는다.<br>
> - 옵션으로 설정할 수 있기 때문에 외부라이브러리의 메소드를 적용할 수 있다.<br>

<p>
16:14:32.449 [Test worker] DEBUG org.springframework.context.annotation.AnnotationConfigApplicationContext - Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5066d65f
16:14:32.458 [Test worker] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
16:14:32.521 [Test worker] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
16:14:32.522 [Test worker] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
16:14:32.523 [Test worker] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
16:14:32.524 [Test worker] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
16:14:32.525 [Test worker] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
16:14:32.527 [Test worker] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'beanLifeCycleTest03.LifeCycleConfig03'
16:14:32.529 [Test worker] DEBUG org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'networkClient'
생성자 호출, url = null
connect: null
call: null message = 초기화 연결 메시지
NetworkClient01 set url
NetworkClient.init
connect: http://spring-hello.dev
call: http://spring-hello.dev message = 초기화 연결 메시지
16:14:32.545 [Test worker] DEBUG org.springframework.context.annotation.AnnotationConfigApplicationContext - Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5066d65f, started on Fri Dec 30 16:14:32 KST 2022
NetworkClient.close
close: http://spring-hello.dev
</p>

종료 메소드 추론
@Bean 등록시 발생

> - @Bean의 destoryMethod는 기본값으로 해당 객체 내에 종료 메소드를 추론한다. 그래서 close, shutdown이라는 메소드를 생성할 경우 해당 메소드를 호출하게 된다.<br>
> - 만약 다른 이름으로 명명했을 경우에는 해당 옵션을 사용하여 메소드명 지정<br>